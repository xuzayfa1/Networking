version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: crm
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:  # Add health check for PostgreSQL
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  backend:
    image: $CI_REGISTRY_IMAGE/backend:latest
    container_name: backend
    depends_on:
      postgres:
        condition: service_healthy  # Wait for PostgreSQL to be healthy
    ports:
      - "8085:8085"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/crm
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: root123
    restart: always

  frontend:
    image: $CI_REGISTRY_IMAGE/frontend:latest
    container_name: frontend
    depends_on:
      - backend
    ports:
      - "3000:80"
    restart: always

volumes:
  postgres_data: